(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{164:function(n,e,i){"use strict";i.r(e);var t=function(){var n=this.$createElement;this._self._c;return this._m(0)};t._withStripped=!0;var s=i(0),o=Object(s.a)({},t,[function(){var n=this,e=n.$createElement,i=n._self._c||e;return i("section",[i("h2",[n._v("@media")]),n._v(" "),i("p",[n._v("The "),i("code",[n._v("@media")]),n._v(" queries work just as they do within regular CSS, but with Stylus's block notation:")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n    @media print\n      #header\n      #footer\n        display none\n  ")])]),n._v(" "),i("p",[n._v("Yielding:")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      @media print {\n        #header,\n        #footer {\n          display: none;\n        }\n      }\n  ")])]),n._v(" "),i("section",[i("h3",[n._v("Media Query Bubbling")]),n._v(" "),i("p",[n._v("Media queries can be nested, too, and they will be expanded to wrap the context in which they are used. For example:")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      .widget\n        padding 10px\n      \n        @media screen and (min-width: 600px)\n          padding 20px\n    ")])]),n._v(" "),i("p",[n._v("Yielding:")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      .widget {\n        padding: 10px;\n      }\n      \n      @media screen and (min-width: 600px) {\n        .widget {\n          padding: 20px;\n        }\n      }\n    ")])])]),n._v(" "),i("section",[i("h3",[n._v("Nested media queries")]),n._v(" "),i("p",[n._v("You can nest "),i("code",[n._v("@media")]),n._v("s one into another and they would combine into one:")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      @media (max-width: 500px)\n        .foo\n          color: #000\n      \n        @media (min-width: 100px), (min-height: 200px)\n          .foo\n            color: #100\n    ")])]),n._v(" "),i("p",[n._v("Would yield to")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      @media (max-width: 500px) {\n        .foo {\n          color: #000;\n        }\n      }\n      @media (max-width: 500px) and (min-width: 100px), (max-width: 500px) and (min-height: 200px) {\n        .foo {\n          color: #100;\n        }\n      }\n    ")])])]),n._v(" "),i("section",[i("h3",[n._v("Interpolations and variables")]),n._v(" "),i("p",[n._v("You can use both interpolations and variables inside media queries, so it is possible to do things like this:")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      foo = 'width'\n      bar = 30em\n      @media (max-{foo}: bar)\n        body\n          color #fff\n    ")])]),n._v(" "),i("p",[n._v("This would yield")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      @media (max-width: 30em) {\n        body {\n          color: #fff;\n        }\n      }\n    ")])]),n._v(" "),i("p",[n._v("It is also possible to use expressions inside MQ:")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      .foo\n        for i in 1..4\n          @media (min-width: 2**(i+7)px)\n            width: 100px*i\n    ")])]),n._v(" "),i("p",[n._v("would yield to")]),n._v(" "),i("pre",[i("code",{staticClass:"my-stylus"},[n._v("\n      @media (min-width: 256px) {\n        .foo {\n          width: 100px;\n        }\n      }\n      @media (min-width: 512px) {\n        .foo {\n          width: 200px;\n        }\n      }\n      @media (min-width: 1024px) {\n        .foo {\n          width: 300px;\n        }\n      }\n      @media (min-width: 2048px) {\n        .foo {\n          width: 400px;\n        }\n      }\n    ")])])])])}],!1,null,null,null);o.options.__file="docs/web/stylus/Media.vue";e.default=o.exports}}]);