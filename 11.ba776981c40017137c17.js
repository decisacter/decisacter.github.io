(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{51:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this.$createElement;this._self._c;return this._m(0)};o._withStripped=!0;var i=n(0),a=Object(i.a)({},o,[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("h2",[e._v("concepts")]),e._v(" "),n("section",[n("h3",[e._v("Entry")]),e._v(" "),n("p",[e._v("An "),n("b",[e._v("entry point")]),e._v(" indicates which module webpack should use to begin building out its internal "),n("b",[e._v("dependency graph")]),e._v(". webpack will figure out which other modules and libraries that entry point depends on (directly and indirectly).")]),e._v(" "),n("p",[e._v("By default its value is "),n("code",[e._v("./src/index.js")]),e._v(", but you can specify a different (or multiple entry points) by setting an "),n("b",[e._v("entry")]),e._v(" property in the webpack configuration. For example:")]),e._v(" "),n("p",[n("b",[e._v("webpack.config.js")])]),e._v(" "),n("pre",[n("code",{staticClass:"my-js"},[e._v("\n      module.exports = {\n        entry: './path/to/my/entry/file.js'\n      };\n    ")])])]),e._v(" "),n("section",[n("h3",[e._v("Output")]),e._v(" "),n("p",[e._v("The "),n("b",[e._v("output")]),e._v(" property tells webpack where to emit the "),n("i",[e._v("bundles")]),e._v(" it creates and how to name these files. It defaults to "),n("code",[e._v("./dist/main.js")]),e._v(" for the main output file and to the "),n("code",[e._v("./dist")]),e._v(" folder for any other generated file.")]),e._v(" "),n("p",[e._v("You can configure this part of the process by specifying an "),n("code",[e._v("output")]),e._v(" field in your configuration:")]),e._v(" "),n("p",[n("b",[e._v("webpack.config.js")])]),e._v(" "),n("pre",[n("code",{staticClass:"my-js"},[e._v("\n      const path = require('path');\n    \n      module.exports = {\n        entry: './path/to/my/entry/file.js',\n        output: {\n          // output ./dist/webpack.bundle.js\n          path: path.resolve(__dirname, 'dist'),\n          filename: 'my-first-webpack.bundle.js'\n        }\n      };\n    ")])]),e._v(" "),n("p",[e._v("In the example above, we use the "),n("code",[e._v("output.filename")]),e._v(" and the "),n("code",[e._v("output.path")]),e._v(" properties to tell webpack the name of our bundle and where we want it to be emitted to.")])]),e._v(" "),n("section",[n("h3",[e._v("Loaders")]),e._v(" "),n("p",[e._v("Out of the box, webpack only understands JavaScript and JSON files. "),n("b",[e._v("Loaders")]),e._v(" allow webpack to process other types of files and convert them into valid "),n("b",[e._v("modules")]),e._v(" that can be consumed by your application and added to the dependency graph.")]),e._v(" "),n("p",[e._v("At a high level, "),n("b",[e._v("loaders")]),e._v(" have two properties in your webpack configuration:")]),e._v(" "),n("ol",[n("li",[e._v("The "),n("code",[e._v("test")]),e._v(" property identifies which file or files should be transformed.")]),e._v(" "),n("li",[e._v("The "),n("code",[e._v("use")]),e._v(" property indicates which loader should be used to do the transforming.")])]),e._v(" "),n("p",[n("b",[e._v("webpack.config.js")])]),e._v(" "),n("pre",[n("code",{staticClass:"my-js"},[e._v("\n      const path = require('path');\n    \n      module.exports = {\n        output: {\n          filename: 'my-first-webpack.bundle.js'\n        },\n        module: {\n          rules: [\n            { test: /\\.txt$/, use: 'raw-loader' }\n          ]\n        }\n      };\n    ")])]),e._v(" "),n("p",[e._v("The configuration above has defined a "),n("code",[e._v("rules")]),e._v(" property for a single module with two required properties: "),n("code",[e._v("test")]),e._v(" and "),n("code",[e._v("use")]),e._v(".")])]),e._v(" "),n("section",[n("h3",[e._v("Plugins")]),e._v(" "),n("p",[e._v("While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimization, asset management and injection of environment variables.")]),e._v(" "),n("p",[e._v("In order to use a plugin, you need to "),n("code",[e._v("require()")]),e._v(" it and add it to the "),n("code",[e._v("plugins")]),e._v(" array. Most plugins are customizable through options. Since you can use a plugin multiple times in a config for different purposes, you need to create an instance of it by calling it with the "),n("code",[e._v("new")]),e._v(" operator.")]),e._v(" "),n("p",[n("b",[e._v("webpack.config.js")])]),e._v(" "),n("pre",[n("code",{staticClass:"my-js"},[e._v("\n      const HtmlWebpackPlugin = require('html-webpack-plugin'); //installed via npm\n      const webpack = require('webpack'); //to access built-in plugins\n      \n      module.exports = {\n        module: {\n          rules: [\n            { test: /\\.txt$/, use: 'raw-loader' }\n          ]\n        },\n        plugins: [\n          new HtmlWebpackPlugin({template: './src/index.html'})\n        ]\n      };\n    ")])]),e._v(" "),n("p",[e._v("In the example above, the "),n("code",[e._v("html-webpack-plugin")]),e._v(" generates an HTML file for your application by injecting automatically all your generated bundles.")])]),e._v(" "),n("section",[n("h3",[e._v("Mode")]),e._v(" "),n("p",[e._v("By setting the "),n("code",[e._v("mode")]),e._v(" parameter to either "),n("code",[e._v("development")]),e._v(", "),n("code",[e._v("production")]),e._v(" or "),n("code",[e._v("none")]),e._v(", you can enable webpack's built-in optimizations that correspond to each environment. The default value is "),n("code",[e._v("production")]),e._v(".")]),e._v(" "),n("pre",[n("code",{staticClass:"my-js"},[e._v("\n      module.exports = {\n        mode: 'production'\n      };\n    ")])])])])}],!1,null,null,null);a.options.__file="docs/web/webpack/concepts/index.vue";t.default=a.exports}}]);