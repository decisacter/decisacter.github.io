(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{127:function(e,t,n){"use strict";n.r(t);var s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("h3",[e._v("Forms")]),e._v(" "),n("section",[n("h4",[e._v("Basic Usage")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("section",[n("h5",[e._v("Text")]),e._v(" "),e._m(3),e._v(" "),n("div",{staticClass:"my-demo"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.message,expression:"message"}],attrs:{placeholder:"edit me"},domProps:{value:e.message},on:{input:function(t){t.target.composing||(e.message=t.target.value)}}}),e._v(" "),n("p",[e._v("Message is: "+e._s(e.message))])])]),e._v(" "),n("section",[n("h5",[e._v("Multiline text")]),e._v(" "),e._m(4),e._v(" "),n("div",{staticClass:"my-demo"},[n("span",[e._v("Multiline message is:")]),e._v(" "),n("p",[e._v(e._s(e.message))]),e._v(" "),n("textarea",{directives:[{name:"model",rawName:"v-model",value:e.message,expression:"message"}],attrs:{placeholder:"add multiple lines"},domProps:{value:e.message},on:{input:function(t){t.target.composing||(e.message=t.target.value)}}})]),e._v(" "),e._m(5)]),e._v(" "),n("section",[n("h5",[e._v("Checkbox")]),e._v(" "),n("p",[e._v("Single checkbox, boolean value:")]),e._v(" "),e._m(6),e._v(" "),n("div",{staticClass:"my-demo"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.checked,expression:"checked"}],attrs:{type:"checkbox",id:"checkbox"},domProps:{checked:Array.isArray(e.checked)?e._i(e.checked,null)>-1:e.checked},on:{change:function(t){var n=e.checked,s=t.target,a=!!s.checked;if(Array.isArray(n)){var i=e._i(n,null);s.checked?i<0&&(e.checked=n.concat([null])):i>-1&&(e.checked=n.slice(0,i).concat(n.slice(i+1)))}else e.checked=a}}}),e._v(" "),n("label",{attrs:{for:"checkbox"}},[e._v(e._s(e.checked))])]),e._v(" "),n("p",[e._v("Multiple checkboxes, bound to the same Array:")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),n("div",{staticClass:"my-demo"},[e._l(e.checkboxes,(function(t){return n("div",{key:t.id},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.checkedNames,expression:"checkedNames"}],attrs:{type:"checkbox",id:t.id},domProps:{value:t.val,checked:Array.isArray(e.checkedNames)?e._i(e.checkedNames,t.val)>-1:e.checkedNames},on:{change:function(n){var s=e.checkedNames,a=n.target,i=!!a.checked;if(Array.isArray(s)){var c=t.val,o=e._i(s,c);a.checked?o<0&&(e.checkedNames=s.concat([c])):o>-1&&(e.checkedNames=s.slice(0,o).concat(s.slice(o+1)))}else e.checkedNames=i}}}),e._v(" "),n("label",{attrs:{for:t.id}},[e._v(e._s(t.val))])])})),e._v(" "),n("span",[e._v("Checked names: "+e._s(e.checkedNames))])],2)]),e._v(" "),n("section",[n("h5",[e._v("Radio")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),n("div",{staticClass:"my-demo"},[e._l(e.radiobuttons,(function(t){return n("div",{key:t.id},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.picked,expression:"picked"}],attrs:{type:"radio",id:t.id},domProps:{value:t.val,checked:e._q(e.picked,t.val)},on:{change:function(n){e.picked=t.val}}}),e._v(" "),n("label",{attrs:{for:t.id}},[e._v(e._s(t.val))])])})),e._v(" "),n("span",[e._v("Picked names: "+e._s(e.picked))])],2)]),e._v(" "),n("section",[n("h5",[e._v("Select")]),e._v(" "),n("p",[e._v("Single select:")]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),n("div",{staticClass:"my-demo"},[n("select",{directives:[{name:"model",rawName:"v-model",value:e.selected,expression:"selected"}],on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.selected=t.target.multiple?n:n[0]}}},e._l(e.options,(function(t){return n("option",{key:t.text,domProps:{value:t.value}},[e._v("\n            "+e._s(t.text)+"\n          ")])})),0),e._v(" "),n("span",[e._v("Selected: "+e._s(e.selected))])]),e._v(" "),n("p",[e._v("Multiple select, bound to the same Array:")]),e._v(" "),e._m(13),e._v(" "),n("div",{staticClass:"my-demo"},[n("select",{directives:[{name:"model",rawName:"v-model",value:e.selectedOptions,expression:"selectedOptions"}],attrs:{multiple:""},on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.selectedOptions=t.target.multiple?n:n[0]}}},e._l(e.options,(function(t){return n("option",{key:t.text,domProps:{value:t.value}},[e._v("\n            "+e._s(t.text)+"\n          ")])})),0),e._v(" "),n("span",[e._v("Selected: "+e._s(e.selectedOptions))])])])]),e._v(" "),n("section",[n("h4",[e._v("Value Bindings")]),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),n("section",[n("h5",[e._v("Checkbox")]),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),n("div",{staticClass:"my-demo"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.toggle,expression:"toggle"}],attrs:{type:"checkbox","true-value":"yes","false-value":"no"},domProps:{checked:Array.isArray(e.toggle)?e._i(e.toggle,null)>-1:e._q(e.toggle,"yes")},on:{change:function(t){var n=e.toggle,s=t.target,a=s.checked?"yes":"no";if(Array.isArray(n)){var i=e._i(n,null);s.checked?i<0&&(e.toggle=n.concat([null])):i>-1&&(e.toggle=n.slice(0,i).concat(n.slice(i+1)))}else e.toggle=a}}}),e._v("\n        toggle: "+e._s(e.toggle)+"\n      ")]),e._v(" "),e._m(19)]),e._v(" "),n("section",[n("h5",[e._v("Radio")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),n("div",{staticClass:"my-demo"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.pick,expression:"pick"}],attrs:{type:"radio"},domProps:{value:e.message,checked:e._q(e.pick,e.message)},on:{change:function(t){e.pick=e.message}}}),e._v("\n        pick: "+e._s(e.pick)+"\n      ")])]),e._v(" "),e._m(22)]),e._v(" "),e._m(23)])};s._withStripped=!0;var a={data:function(){return{message:"",checked:!1,checkedNames:[],checkboxes:["Jack","John","Mike"],toggle:"no",radiobuttons:["Jack","John","Mike"],picked:"",pick:"",selected:"",selectedOptions:[],options:[{text:"One",value:"A"},{text:"Two",value:"B"},{text:"Three",value:"C"}]}},created:function(){this.checkboxes=this.checkboxes.map((function(e){return{id:e.toLowerCase(),val:e}})),this.radiobuttons=this.radiobuttons.map((function(e){return{id:e.toLowerCase(),val:e}}))}},i=n(0),c=Object(i.a)(a,s,[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You can use the "),t("code",[this._v("v-model")]),this._v(" directive to create two-way data bindings on form input, textarea, and select elements. It automatically picks the correct way to update the element based on the input type. Although a bit magical, "),t("code",[this._v("v-model")]),this._v(" is essentially syntax sugar for updating data on user input events, plus special care for some edge cases.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("v-model")]),e._v(" will ignore the initial "),n("code",[e._v("value")]),e._v(", "),n("code",[e._v("checked")]),e._v(" or "),n("code",[e._v("selected")]),e._v(" attributes found on any form elements. It will always treat the Vue instance data as the source of truth. You should declare the initial value on the JavaScript side, inside the "),n("code",[e._v("data")]),e._v(" option of your component. "),n("code",[e._v("v-model")]),e._v(" internally uses different properties and emits different events for different input elements:")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("text and textarea elements use "),n("code",[e._v("value")]),e._v(" property and "),n("code",[e._v("input")]),e._v(" event;")]),e._v(" "),n("li",[e._v("checkboxes and radiobuttons use "),n("code",[e._v("checked")]),e._v(" property and "),n("code",[e._v("change")]),e._v(" event;")]),e._v(" "),n("li",[e._v("select fields use "),n("code",[e._v("value")]),e._v(" as a prop and "),n("code",[e._v("change")]),e._v(" as an event.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        \x3c!-- message bind to input "value" attribute--\x3e\n        <input v-model="message" placeholder="edit me">\n        <p>Message is: { message }</p>\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <span>Multiline message is:</span>\n        <p>{ message }</p>\n        \x3c!-- message bind to textarea innerText --\x3e\n        <textarea v-model="message" placeholder="add multiple lines"></textarea>\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Interpolation on textareas ("),t("code",[this._v("<textarea>{text}</textarea>")]),this._v(") won't work. Use "),t("code",[this._v("v-model")]),this._v(" instead.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        \n        \x3c!-- checked is not an array --\x3e\n        \x3c!-- click one checkbox will toggle other one which used v-model="checked" --\x3e\n        <input type="checkbox" id="checkbox" v-model="checked">\n        <label for="checkbox">{ checked }</label>\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <div v-for="checkbox in checkboxes" :key="checkbox.id">\n          \x3c!-- checkedNames is an array --\x3e\n          \x3c!-- click one checkbox will add its value attribute\'s value to checkNames --\x3e\n          <input type="checkbox" :id="checkbox.id" :value="checkbox.val" v-model="checkedNames">\n          <label :for="checkbox.id">{ checkbox.val }</label>\n        </div>\n        <span>Checked names: { checkedNames }</span>\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n        data: {\n          checkboxes: ['Jack' ,'John', 'Mike'],\n          checkedNames: []\n        },\n        created() {\n          this.checkboxes = this.checkboxes.map(checkbox => {\n            return {\n              id: checkbox.toLowerCase(),\n              val: checkbox\n            }\n          })\n        },\n      ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <div v-for="radio in radiobuttons" :key="radio.id">\n          \x3c!-- click one radio button will set picked as its value attribute\'s value --\x3e\n          <input type="radio" :id="radio.id" :value="radio.val" v-model="picked">\n          <label :for="radio.id">{ radio.val }</label>\n        </div>\n        <span>Picked names: { picked }</span>\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n        data: {\n          radiobuttons: ['Jack' ,'John', 'Mike'],\n          picked: ''\n        },\n        created() {\n          this.radiobuttons = this.radiobuttons.map(radio => {\n            return {\n              id: radio.toLowerCase(),\n              val: radio\n            }\n          })\n        },\n      ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <select v-model="selected">\n          \x3c!-- select options will add its text to selected --\x3e\n          <option v-for="option in options" :value="option.value">\n            { option.text }\n          </option>\n        </select>\n        <span>Selected: { selected }</span>\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n        data: {\n          selected: '',\n          options: [\n            { text: 'One', value: 'A' },\n            { text: 'Two', value: 'B' },\n            { text: 'Three', value: 'C' }\n          ]\n        },\n      ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <select v-model="selectedOptions" multiple>\n          <option v-for="option in options" :value="option.value">\n            { option.text }\n          </option>\n        </select>\n        <span>Selected: { selectedOptions }</span>\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("For radio, checkbox and select options, the "),t("code",[this._v("v-model")]),this._v(" binding values are usually static strings (or booleans for checkbox):")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n      \x3c!-- `picked` is a string "a" when checked --\x3e\n      <input type="radio" v-model="picked" value="a">\n      \x3c!-- `toggle` is either true or false --\x3e\n      <input type="checkbox" v-model="toggle">\n      \x3c!-- `selected` is a string "abc" when the first option is selected --\x3e\n      <select v-model="selected">\n        <option value="abc">ABC</option>\n      </select>\n    ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("But sometimes we may want to bind the value to a dynamic property on the Vue instance. We can use "),t("code",[this._v("v-bind")]),this._v(" to achieve that. In addition, using "),t("code",[this._v("v-bind")]),this._v(" allows us to bind the input value to non-string values.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <input\n          type="checkbox"\n          v-model="toggle"\n          true-value="yes"\n          false-value="no"\n        >\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n        // click checkbox will change toggle property\n        // when checked:\n        vm.toggle === 'yes'\n        // when unchecked:\n        vm.toggle === 'no'\n      ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("true-value")]),this._v(" and "),t("code",[this._v("false-value")]),this._v(" attributes don't affect the input's "),t("code",[this._v("value")]),this._v(' attribute, because browsers don\'t include unchecked boxes in form submissions. To guarantee that one of two values is submitted in a form (e.g. "yes" or "no"), use radio inputs instead.')])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <input type="radio" v-model="pick" :value="toggle">\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n        // click radio button will change picked property\n        // when checked:\n        vm.pick === vm.message\n      ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("section",[t("h5",[this._v("Select Options")]),this._v(" "),t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <select v-model="selected">\n          \x3c!-- inline object literal --\x3e\n          <option :value="{ number: 123 }">123</option>\n        </select>\n      ')])]),this._v(" "),t("pre",[t("code",{staticClass:"my-js"},[this._v("\n        // select option will change picked property\n        // when selected:\n        typeof vm.selected // => 'object'\n        vm.selected.number // => 123\n      ")])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("h4",[e._v("Modifiers")]),e._v(" "),n("section",[n("h5",[e._v(".lazy")]),e._v(" "),n("p",[e._v("By default, "),n("code",[e._v("v-model")]),e._v(" syncs the input with the data after each "),n("code",[e._v("input")]),e._v(" event. You can add the "),n("code",[e._v("lazy")]),e._v(" modifier to instead sync after "),n("code",[e._v("change")]),e._v(" events:")]),e._v(" "),n("pre",[n("code",{staticClass:"my-html"},[e._v('\n        \x3c!-- synced after "change" instead of "input" --\x3e\n        <input v-model.lazy="msg" >\n      ')])])]),e._v(" "),n("section",[n("h5",[e._v(".number")]),e._v(" "),n("p",[e._v("If you want user input to be automatically typecast as a number, you can add the "),n("code",[e._v("number")]),e._v(" modifier to your "),n("code",[e._v("v-model")]),e._v(" managed inputs:")]),e._v(" "),n("pre",[n("code",{staticClass:"my-html"},[e._v('\n        <input v-model.number="age" type="number">\n      ')])]),e._v(" "),n("p",[e._v("This is often useful, because even with "),n("code",[e._v('type="number"')]),e._v(", the value of HTML input elements always returns a string. If the value cannot be parsed with "),n("code",[e._v("parseFloat()")]),e._v(", then the original value is returned.")])]),e._v(" "),n("section",[n("h5",[e._v(".trim")]),e._v(" "),n("p",[e._v("If you want whitespace from user input to be trimmed automatically, you can add the "),n("code",[e._v("trim")]),e._v(" modifier to your "),n("code",[e._v("v-model")]),e._v("-managed inputs:")]),e._v(" "),n("pre",[n("code",{staticClass:"my-html"},[e._v('\n        <input v-model.trim="msg">\n      ')])])])])}],!1,null,null,null);c.options.__file="docs/web/vue/guide/Forms.vue";t.default=c.exports}}]);