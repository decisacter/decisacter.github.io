(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{105:function(e,n,t){"use strict";var r=t(64);t.n(r).a},106:function(e,n,t){(n=t(13)(!1)).push([e.i,"form input[type=button][data-v-1204d264] {\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  border-radius: 5px;\n}\ntable tr[data-v-1204d264] {\n  background-color: #eee;\n}\ntable tr[data-v-1204d264]:nth-child(even) {\n  background-color: #fff;\n}\ntable td[data-v-1204d264] {\n  padding: 4px 10px;\n}\ntable#users tr[data-v-1204d264] {\n  background-color: #494848;\n}\ntable#users tr[data-v-1204d264]:nth-child(even) {\n  background-color: #303030;\n}\ntable#users td[data-v-1204d264] {\n  color: #fff;\n}\n",""]),e.exports=n},159:function(e,n,t){"use strict";t.r(n);var r=function(){var e=this.$createElement;this._self._c;return this._m(0)};r._withStripped=!0;t(105);var i=t(0),o=Object(i.a)({},r,[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",[t("h2",[e._v("Mixins")]),e._v(" "),t("p",[e._v("Both mixins and functions are defined in the same manner, but they are applied in different ways. For example, we have a "),t("code",[e._v("border-radius(n)")]),e._v(" function defined below, which is invoked as a "),t("i",[e._v("mixin")]),e._v(" (i.e., invoked as a statement, rather than part of an expression).")]),e._v(" "),t("p",[e._v("When "),t("code",[e._v("border-radius()")]),e._v(" is invoked within a selector, the properties are expanded and copied into the selector.")]),e._v(" "),t("pre",[t("code",{staticClass:"my-stylus"},[e._v("\n    border-radius(n)\n      -webkit-border-radius n\n      -moz-border-radius n\n      border-radius n\n    \n    form input[type=button]\n      border-radius(5px)\n  ")])]),e._v(" "),t("p",[e._v("Compiles to:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-css"},[e._v("\n    form input[type=button] {\n      -webkit-border-radius: 5px;\n      -moz-border-radius: 5px;\n      border-radius: 5px;\n    }\n  ")])]),e._v(" "),t("p",[e._v("When using mixins you can omit the parentheses altogether, providing fantastic transparent vendor property support!")]),e._v(" "),t("pre",[t("code",{staticClass:"my-stylus"},[e._v("\n    border-radius(n)\n      -webkit-border-radius n\n      -moz-border-radius n\n      border-radius n\n  \n    form input[type=button]\n      border-radius 5px\n  ")])]),e._v(" "),t("p",[e._v("Note that the "),t("code",[e._v("border-radius")]),e._v(" within our mixin is treated as a property, and not a recursive function invocation.")]),e._v(" "),t("p",[e._v("To take this further, we can utilize the automatic "),t("code",[e._v("arguments")]),e._v(" local variable, containing the expression passed, allowing multiple values to be passed:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-stylus"},[e._v("\n    border-radius()\n      -webkit-border-radius arguments\n      -moz-border-radius arguments\n      border-radius arguments\n  ")])]),e._v(" "),t("div",{staticClass:"my-demo"},[t("form",{attrs:{action:""}},[t("input",{attrs:{type:"button",value:"input button"}})])]),e._v(" "),t("p",[e._v("Now we can pass values like "),t("code",[e._v("border-radius 1px 2px / 3px 4px")]),e._v("!")]),e._v(" "),t("p",[e._v("Rendering:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-css"},[e._v("\n    #logo:hover {\n        opacity: 0.5;\n        filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=50);\n      }\n  ")])]),e._v(" "),t("section",[t("h3",[e._v("Parent References")]),e._v(" "),t("p",[e._v("Mixins may utilize the parent reference character "),t("code",[e._v("&")]),e._v(", acting on the parent instead of further nesting.")]),e._v(" "),t("p",[e._v("For example, let's say we want to create a "),t("code",[e._v("stripe(even, odd)")]),e._v(" mixin for striping table rows. We provide both "),t("code",[e._v("even")]),e._v(" and "),t("code",[e._v("odd")]),e._v(" with default color values, and assign the "),t("code",[e._v("background-color")]),e._v(" property on the row. Nested within the "),t("code",[e._v("tr")]),e._v(" we use "),t("code",[e._v("&")]),e._v(" to reference the "),t("code",[e._v("tr")]),e._v(", providing the "),t("code",[e._v("even")]),e._v(" color.")]),e._v(" "),t("pre",[t("code",{staticClass:"my-stylus"},[e._v("\n      stripe(even = #fff, odd = #eee)\n        tr\n          background-color odd\n          &.even\n          &:nth-child(even)\n            background-color even\n    ")])]),e._v(" "),t("p",[e._v("We may then utilize the mixin as shown below:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-stylus"},[e._v("\n      table\n        // empty parentheses can not be omit\n        stripe()\n        td\n          padding 4px 10px\n    \n     table#users\n      stripe #303030 #494848\n      td\n        color white\n    ")])]),e._v(" "),t("div",{staticClass:"my-demo"},[t("table",[t("tr",[t("td",[e._v("1")])]),e._v(" "),t("tr",[t("td",[e._v("2")])]),e._v(" "),t("tr",[t("td",[e._v("3")])]),e._v(" "),t("tr",[t("td",[e._v("4")])])]),e._v(" "),t("table",{attrs:{id:"users"}},[t("tr",[t("td",[e._v("1")])]),e._v(" "),t("tr",[t("td",[e._v("2")])]),e._v(" "),t("tr",[t("td",[e._v("3")])]),e._v(" "),t("tr",[t("td",[e._v("4")])])])]),e._v(" "),t("p",[e._v("Alternatively, "),t("code",[e._v("stripe()")]),e._v(" could be defined without parent references:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-stylus"},[e._v("\n      stripe(even = #fff, odd = #eee)\n        tr\n          background-color odd\n          tr.even\n          tr:nth-child(even)\n            background-color even\n    ")])]),e._v(" "),t("p",[e._v("If we wished, we could invoke "),t("code",[e._v("stripe()")]),e._v(" as if it were a property:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-stylus"},[e._v("\n      stripe #fff #000\n    ")])])]),e._v(" "),t("section",[t("h3",[e._v("Block mixins")]),e._v(" "),t("p",[e._v("You can pass blocks to mixins by calling mixin with "),t("code",[e._v("+")]),e._v(" prefix. The passed block would be available inside the mixin as "),t("code",[e._v("block")]),e._v(" variable, that then could be used with interpolation:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-css"},[e._v("\n      foo()\n      .bar\n        {block}\n    \n      +foo()\n        width: 10px\n    ")])]),e._v(" "),t("p",[e._v("output:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-css"},[e._v("\n      .bar {\n        width: 10px;\n      }\n    ")])]),e._v(" "),t("p",[e._v("This feature is in its rough state ATM, but would be enhanced in the future.")])]),e._v(" "),t("section",[t("h3",[e._v("Mixing Mixins in Mixins")]),e._v(" "),t("p",[e._v("Mixins can (of course!) utilize other mixins, building upon their own selectors and properties.")]),e._v(" "),t("p",[e._v("For example, below we create "),t("code",[e._v("comma-list()")]),e._v(" to inline (via "),t("code",[e._v("inline-list()")]),e._v(") and comma-separate an unordered list.")]),e._v(" "),t("pre",[t("code",{staticClass:"my-stylus"},[e._v("\n      inline-list()\n        li\n          display inline\n    \n      comma-list()\n        inline-list()\n        li\n          &:after\n            content ', '\n          &:last-child:after\n            content ''\n      \n      ul\n        comma-list()\n    ")])]),e._v(" "),t("p",[e._v("Rendering:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-css"},[e._v('\n      ul li:after {\n      content: ", ";\n      }\n      ul li:last-child:after {\n        content: "";\n      }\n      ul li {\n        display: inline;\n      }\n    ')])])])])}],!1,null,"1204d264",null);o.options.__file="docs/web/stylus/Mixins.vue";n.default=o.exports},64:function(e,n,t){var r=t(106);"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,t(14).default)("598891f8",r,!1,{})}}]);