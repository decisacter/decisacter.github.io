(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{135:function(e,t,s){"use strict";s.r(t);var i=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("section",[s("h3",[e._v("Filters")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),s("p",[e._v("You can define local filters in a component's options:")]),e._v(" "),e._m(2),e._v(" "),s("p",[e._v("or define a filter globally before creating the Vue instance:")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),s("div",{staticClass:"my-demo"},[s("input",{directives:[{name:"model",rawName:"v-model",value:e.message,expression:"message"}],domProps:{value:e.message},on:{input:function(t){t.target.composing||(e.message=t.target.value)}}}),e._v(" "),s("p",[e._v(e._s(e._f("capitalize")(e.message)))])]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9)])};i._withStripped=!0;var n={data:function(){return{message:"john"}},filters:{capitalize:function(e){return e?(e=e.toString()).charAt(0).toUpperCase()+e.slice(1):""}}},a=s(0),r=Object(a.a)(n,i,[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Vue.js allows you to define filters that can be used to apply common text formatting. Filters are usable in two places: "),t("b",[this._v("mustache interpolations and "),t("code",[this._v("v-bind")]),this._v(" expressions")]),this._v(' (the latter supported in 2.1.0+). Filters should be appended to the end of the JavaScript expression, denoted by the "pipe" symbol:')])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n    \x3c!-- in mustaches --\x3e\n    { message | capitalize }\n    \n    \x3c!-- in v-bind --\x3e\n    <div :id="rawId | formatId"></div>\n  ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n    filters: {\n      capitalize(value) {\n        if (!value) return ''\n        value = value.toString()\n        return value.charAt(0).toUpperCase() + value.slice(1)\n      }\n    }\n  ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n    Vue.filter('capitalize', function (value) {\n      if (!value) return ''\n      value = value.toString()\n      return value.charAt(0).toUpperCase() + value.slice(1)\n    })\n    \n    new Vue({\n      // ...\n    })\n  ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n    <input v-model="message">\n    <p>{ message | capitalize }</p>\n  ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("When the global filter has the same name as the local filter, the local filter will be preferred. The filter's function always receives the expression's value (the result of the former chain) as its first argument. In the above example, the "),t("code",[this._v("capitalize")]),this._v(" filter function will receive the value of "),t("code",[this._v("message")]),this._v(" as its argument. Filters can be chained:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n    { message | filterA | filterB }\n  ")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("In this case, "),s("code",[e._v("filterA")]),e._v(", defined with a single argument, will receive the value of "),s("code",[e._v("message")]),e._v(", and then the "),s("code",[e._v("filterB")]),e._v(" function will be called with the result of "),s("code",[e._v("filterA")]),e._v(" passed into "),s("code",[e._v("filterB")]),e._v("'s single argument. Filters are JavaScript functions, therefore they can take arguments:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n    { message | filterA('arg1', arg2) }\n  ")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Here "),s("code",[e._v("filterA")]),e._v(" is defined as a function taking three arguments. The value of "),s("code",[e._v("message")]),e._v(" will be passed into the first argument. The plain string "),s("code",[e._v("'arg1'")]),e._v(" will be passed into the "),s("code",[e._v("filterA")]),e._v(" as its second argument, and the value of expression "),s("code",[e._v("arg2")]),e._v(" will be evaluated and passed in as the third argument.")])}],!1,null,null,null);r.options.__file="docs/web/vue/guide/Filters.vue";t.default=r.exports}}]);