(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{148:function(e,t,n){"use strict";n.r(t);var s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("h3",[e._v("Computed")]),e._v(" "),n("section",[n("h4",[e._v("Computed Properties")]),e._v(" "),n("section",[n("h5",[e._v("Basic Example")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("div",{staticClass:"my-demo"},[n("p",[e._v('Original message: "'+e._s(e.message)+'"')]),e._v(" "),n("p",[e._v('Computed reversed message: "'+e._s(e.reversedMessage)+'"')])]),e._v(" "),e._m(3)]),e._v(" "),e._m(4),e._v(" "),n("section",[n("h5",[e._v("Computed Setter")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),n("div",{staticClass:"my-demo"},[n("p",[e._v('Get full name "'+e._s(e.fullName)+'" '),n("button",{on:{click:function(t){e.fullName="John Doe"}}},[e._v("Set Name")])]),e._v(" "),n("p",[e._v("first name is '"+e._s(e.firstName)+"', last name is '"+e._s(e.lastName)+"'")])]),e._v(" "),e._m(7)])]),e._v(" "),n("section",[n("h4",[e._v("Watchers")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),n("div",{staticClass:"my-demo"},[n("p",[e._v("\n        Ask a yes/no question:\n        "),n("input",{directives:[{name:"model",rawName:"v-model",value:e.question,expression:"question"}],domProps:{value:e.question},on:{input:function(t){t.target.composing||(e.question=t.target.value)}}})]),e._v(" "),n("p",[e._v(e._s(e.answer))])])])])};s._withStripped=!0;var a=n(65).a,i=n(0),o=Object(i.a)(a,s,[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To use a computed property, define a getter function whose name is the property name in the "),t("code",[t("a",{staticClass:"vue-api"},[this._v("computed")])]),this._v(" property of Vue instance.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n        <div id="example">\n          <p>Original message: "{ message }"</p>\n          <p>Computed reversed message: "{ reversedMessage }"</p>\n        </div>\n      ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n        data: {\n          message: 'Hello'\n        },\n        computed: {\n          // a computed getter\n          reversedMessage() {\n            // `this` points to the vm instance\n            return this.message.split('').reverse().join('')\n          }\n        }\n      ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The value of "),t("code",[this._v("vm.reversedMessage")]),this._v(" is always dependent on the value of "),t("code",[this._v("vm.message")]),this._v(".")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("h5",[e._v("Computed Caching vs Methods")]),e._v(" "),n("p",[e._v("Instead of a computed property, we can define the same function as a method. For the end result, the two approaches are indeed exactly the same. However, the difference is that "),n("b",[e._v("computed properties are cached based on their reactive dependencies.")]),e._v(" A computed property will only re-evaluate when some of its reactive dependencies have changed. This means as long as "),n("code",[e._v("message")]),e._v(" has not changed, multiple access to the "),n("code",[e._v("reversedMessage")]),e._v(" computed property will immediately return the previously computed result without having to run the function again. In comparison, a method invocation will "),n("b",[e._v("always")]),e._v(" run the function whenever a re-render happens.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v("\n        <p>Get full name \"{ fullName }\" <button @click=\"fullName = 'John Doe'\">Set Name</button></p>\n        <p>first name is '{ firstName }', last name is '{ lastName }'</p>\n      ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n        computed: {\n          fullName: {\n            // getter\n            get() {\n              return `${this.firstName} ${this.lastName}`\n            },\n            // setter\n            set(val) {\n              this.firstName = val.replace(/ .*/, '');\n              this.lastName = val.replace(/.* /, '');\n            }\n          }\n        }\n      ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Now when you run "),t("code",[this._v("vm.fullName = 'John Doe'")]),this._v(", the setter will be invoked and "),t("code",[this._v("vm.firstName")]),this._v(" and "),t("code",[this._v("vm.lastName")]),this._v(" will be updated accordingly.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("While computed properties are more appropriate in most cases, there are times when a custom watcher is necessary. That's why Vue provides a more generic way to react to data changes through the "),t("code",[this._v("watch")]),this._v(" option. This is most useful when you want to perform "),t("b",[this._v("asynchronous")]),this._v(" or expensive operations in response to changing data.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-html"},[this._v('\n      <p>\n      Ask a yes/no question:\n      <input v-model="question">\n      </p>\n      <p>{ answer }</p>\n    ')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n      data: {\n        question: '',\n        answer: 'I cannot give you an answer until you ask a question!'\n      },\n      watch: {\n        // whenever question changes, this function will run\n        question() {\n          this.answer = 'Waiting for you to stop typing...'\n          this.debouncedGetAnswer()\n        }\n      },\n      created() {\n        // _.debounce is a function provided by lodash to limit how\n        // often a particularly expensive operation can be run.\n        // In this case, we want to limit how often we access\n        // yesno.wtf/api, waiting until the user has completely\n        // finished typing before making the ajax request. To learn\n        // more about the _.debounce function (and its cousin\n        // _.throttle), visit: https://lodash.com/docs#debounce\n        (async () => {\n          await getCDN('lodash');\n          this.debouncedGetAnswer = _.debounce(this.getAnswer, 500)\n        })();\n      },\n      methods: {\n        async getAnswer() {\n          if (!this.question.match(/\\?/)) {\n            this.answer = 'Questions usually contain a question mark. ;-)'\n            return\n          }\n          \n          (async () => {\n            await getCDN('axios@0.19.2/dist/axios.min.js');\n            const response = await axios.get('https://yesno.wtf/api')\n            this.answer = _.capitalize(response.data.answer)\n          })();\n        }\n      }\n    ")])])}],!1,null,null,null);o.options.__file="docs/web/vue/guide/Computed.vue";t.default=o.exports},65:function(e,t,n){"use strict";(function(e){function n(e,t,n,s,a,i,o){try{var r=e[i](o),c=r.value}catch(e){return void n(e)}r.done?t(c):Promise.resolve(c).then(s,a)}function s(e){return function(){var t=this,s=arguments;return new Promise((function(a,i){var o=e.apply(t,s);function r(e){n(o,a,i,r,c,"next",e)}function c(e){n(o,a,i,r,c,"throw",e)}r(void 0)}))}}t.a={data:function(){return{message:"Hello",firstName:"Foo",lastName:"Bar",question:"",answer:"I cannot give you an answer until you ask a question!"}},computed:{reversedMessage:function(){return this.message.split("").reverse().join("")},fullName:{get:function(){return"".concat(this.firstName," ").concat(this.lastName)},set:function(e){this.firstName=e.replace(/ .*/,""),this.lastName=e.replace(/.* /,"")}}},watch:{question:function(){this.answer="Waiting for you to stop typing...",this.debouncedGetAnswer()}},created:function(){e.debounce(this.getAnswer,500)},methods:{getAnswer:function(){var e=this;return s(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e.question.match(/\?/)){t.next=3;break}return e.answer="Questions usually contain a question mark. ;-)",t.abrupt("return");case 3:s(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:case"end":return e.stop()}}),e)})))();case 4:case"end":return t.stop()}}),t)})))()}}}}).call(this,n(107))}}]);