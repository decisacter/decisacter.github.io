(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{121:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("h3",[e._v("Instance")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("section",[n("h4",[e._v("Data and Methods")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),n("div",{staticClass:"my-demo"},[n("p",[e._v(e._s(e.foo))]),e._v(" "),n("button",{attrs:{click:e.foo="baz"}},[e._v("Change it")])]),e._v(" "),e._m(8),e._v(" "),e._m(9)])])};a._withStripped=!0;var s={data:function(){return{foo:"bar"}}},i=n(0),r=Object(i.a)(s,a,[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Every Vue application starts by creating a new "),t("b",[this._v("Vue instance")]),this._v(" with the "),t("code",[this._v("Vue")]),this._v(" function:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n    var vm = new Vue({\n    // options\n    })\n  ")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("When you create a Vue instance, you pass in an "),n("b",[e._v("options object")]),e._v(" ("),n("a",{staticClass:"vue-api"},[e._v("Options-Data")]),e._v("). A Vue application consists of a "),n("b",[e._v("root Vue instance")]),e._v(" created with "),n("code",[e._v("new Vue")]),e._v(", optionally organized into a tree of nested, reusable components.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("When a Vue instance is created, it adds all the properties found in its "),t("code",[t("a",{staticClass:"vue-api"},[this._v("data")])]),this._v(" object to Vue's "),t("b",[this._v("reactivity system")]),this._v('. When the values of those properties change, the view will "react", updating to match the new values.')])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n      // Our data object\n      var data = { a: 1 }\n      \n      // The object is added to a Vue instance\n      var vm = new Vue({\n        data: data\n      })\n      \n      // Getting the property on the instance\n      // returns the one from the original data\n      vm.a == data.a // => true\n      \n      // Setting the property on the instance\n      // also affects the original data\n      vm.a = 2\n      data.a // => 2\n      \n      // ... and vice-versa\n      data.a = 3\n      vm.a // => 3\n\n      // data will not be reactive\n      vm.b = 'hi'\n    ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("When this data changes, the view will re-render. It should be noted that properties in "),t("code",[this._v("data")]),this._v(" are only "),t("b",[this._v("reactive")]),this._v(" if they existed when the instance was created. That means if you add a new property, like.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Then changes to "),t("code",[this._v("b")]),this._v(" will not trigger any view updates. If you know you'll need a property later, but it starts out empty or non-existent, you'll need to set some initial value. For example:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n      data: {\n        str: '', // string\n        num: 0, // number\n        bool: false, // boolean\n        arr: [], // array\n        err: null, // null\n        obj: {} // object\n      }\n    ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In addition to data properties, Vue instances expose a number of useful "),t("a",{staticClass:"vue-api"},[this._v("Instance-Properties")]),this._v(" and "),t("a",{staticClass:"vue-api"},[this._v("Instance-Methods")]),this._v(". These are prefixed with "),t("code",[this._v("$")]),this._v(" to differentiate them from user-defined properties. For example:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{staticClass:"my-js"},[this._v("\n      var data = { a: 1 }\n      var vm = new Vue({\n        el: '#example',\n        data: data\n      })\n      \n      // instance property\n      vm.$data === data // => true \n      vm.$el === document.getElementById('example') // => true\n      \n      // $watch is an instance method\n      vm.$watch('a', function (newValue, oldValue) {\n        // This callback will be called when `vm.a` changes\n      })\n    ")])])}],!1,null,null,null);r.options.__file="docs/web/vue/guide/Instance.vue";t.default=r.exports}}]);