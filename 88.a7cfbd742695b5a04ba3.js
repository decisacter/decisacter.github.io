(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{168:function(e,o,t){"use strict";t.r(o);var n=function(){var e=this.$createElement;this._self._c;return this._m(0)};n._withStripped=!0;var i=t(0),s=Object(i.a)({},n,[function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("section",[t("h3",[e._v("Plugins")]),e._v(" "),t("p",[e._v("Plugins usually add global-level functionality to Vue. There is no strictly defined scope for a plugin - there are typically several types of plugins:")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Add some global methods or properties. e.g. "),t("a",{attrs:{href:"https://github.com/karol-f/vue-custom-element"}},[e._v("vue-custom-element")])])]),e._v(" "),t("li",[t("p",[e._v("Add one or more global assets: directives/filters/transitions etc. e.g. "),t("a",{attrs:{href:"https://github.com/vuejs/vue-touch"}},[e._v("vue-touch")])])]),e._v(" "),t("li",[t("p",[e._v("Add some component options by global mixin. e.g. "),t("a",{attrs:{href:"https://github.com/vuejs/vue-router"}},[e._v("vue-router")])])]),e._v(" "),t("li",[t("p",[e._v("Add some Vue instance methods by attaching them to Vue.prototype.")])]),e._v(" "),t("li",[t("p",[e._v("A library that provides an API of its own, while at the same time injecting some combination of the above. e.g. "),t("a",{attrs:{href:"https://github.com/vuejs/vue-router"}},[e._v("vue-router")])])])]),e._v(" "),t("section",[t("h4",[e._v("Using a Plugin")]),e._v(" "),t("p",[e._v("Use plugins by calling the "),t("code",[e._v("Vue.use()")]),e._v(" global method. This has to be done before you start your app by calling "),t("code",[e._v("new Vue()")]),e._v(":")]),e._v(" "),t("pre",[t("code",{staticClass:"my-js"},[e._v("\n      // calls `MyPlugin.install(Vue)`\n      Vue.use(MyPlugin)\n      \n      new Vue({\n        //... options\n      })\n    ")])]),e._v(" "),t("p",[e._v("You can optionally pass in some options:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-js"},[e._v("\n      Vue.use(MyPlugin, { someOption: true })\n    ")])]),e._v(" "),t("p",[t("code",[e._v("Vue.use")]),e._v(" automatically prevents you from using the same plugin more than once, so calling it multiple times on the same plugin will install the plugin only once.")]),e._v(" "),t("p",[e._v("Some plugins provided by Vue.js official plugins such as "),t("code",[e._v("vue-router")]),e._v(" automatically calls "),t("code",[e._v("Vue.use()")]),e._v(" if "),t("code",[e._v("Vue")]),e._v(" is available as a global variable. However in a module environment such as CommonJS, you always need to call "),t("code",[e._v("Vue.use()")]),e._v(" explicitly:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-js"},[e._v("\n      // When using CommonJS via Browserify or Webpack\n      var Vue = require('vue')\n      var VueRouter = require('vue-router')\n      \n      // Don't forget to call this\n      Vue.use(VueRouter)\n    ")])]),e._v(" "),t("p",[e._v("Checkout "),t("a",{attrs:{href:"https://github.com/vuejs/awesome-vue#components--libraries"}},[e._v("awesome-vue")]),e._v(" for a huge collection of community-contributed plugins and libraries.")])]),e._v(" "),t("section",[t("h4",[e._v("Writing a Plugin")]),e._v(" "),t("p",[e._v("A Vue.js plugin should expose an "),t("code",[e._v("install")]),e._v(" method. The method will be called with the "),t("code",[e._v("Vue")]),e._v(" constructor as the first argument, along with possible options:")]),e._v(" "),t("pre",[t("code",{staticClass:"my-js"},[e._v("\n      MyPlugin.install = function (Vue, options) {\n        // 1. add global method or property\n        Vue.myGlobalMethod = function () {\n          // some logic ...\n        }\n      \n        // 2. add a global asset\n        Vue.directive('my-directive', {\n          bind (el, binding, vnode, oldVnode) {\n            // some logic ...\n          }\n          ...\n        })\n      \n        // 3. inject some component options\n        Vue.mixin({\n          created() {\n            // some logic ...\n          }\n          ...\n        })\n      \n        // 4. add an instance method\n        Vue.prototype.$myMethod = function (methodOptions) {\n          // some logic ...\n        }\n      }\n    ")])])])])}],!1,null,null,null);s.options.__file="docs/web/vue/guide/Plugins.vue";o.default=s.exports}}]);